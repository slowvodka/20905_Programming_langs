#lang scheme
(require "Maman11_allQ.rkt") 
(require "utils.rkt")
(provide TESTQ3)


(define train-cases
    (list
        '()
        '(1)
        '(1 2)
        '(1 2 3)
        '(1 (2))
        '(1 a ())
    )
)

(define test-cases
    (list
        '(())
        '((1))
        '((1 2) (2 1))
        '((1 2 3) (1 3 2) (2 1 3) (2 3 1) (3 1 2) (3 2 1))
        '((1 (2)) ((2) 1))
        '((1 a ()) (1 () a) (a 1 ()) (a () 1) (() 1 a) (() a 1))
    ))


(define (TESTQ3)
    (displayln (format "Q3 TESTS:"))
    (for ([input train-cases]
            [expected test-cases]
            [i (in-naturals 1)])
        (define result (my_permutations input))
        (if (unordered-equal? result expected)
        (displayln (format "TEST ~a: ✅ PASS" i))
        (begin
            (displayln (format "TEST ~a: ❌ FAIL" i))
            (displayln (format "  Input:    ~a" input))
            (displayln (format "  Got:      ~a" result))
            (displayln (format "  Expected: ~a\n" expected)))
        )
    )

)

